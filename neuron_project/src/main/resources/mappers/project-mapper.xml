<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="projectMapper">
  
    <resultMap type="Project" id="ProjectResultMap">
	   <id property="projectNo" column="PROJECT_NO"/>
	   <result property="projectTitle" column="PROJECT_TITLE"/>
	   <result property="projectContents" column="PROJECT_CONTENTS"/>
	   <result property="projectMaster" column="PROJECT_MASTER"/>
	   <result property="projectInsertRequest" column="PROJECT_INSERT_REQUEST"/>
	   <result property="projectDeleteRequest" column="PROJECT_DELETE_REQUEST"/>
  	</resultMap>
  	
  	
  	<resultMap type="EmpProject" id="EmpProjectResultMap">
  		<id property="empNo" column="EMP_NO"/>
  		<id property="projectNo" column="PROJECT_NO"/>
  		<result property="empAuth" column="EMP_PROJECT_AUTH"/>
  		<result property="projectTitle" column="PROJECT_TITLE"/>
  	</resultMap>
  	
  	<resultMap type="ProjectMember" id="ProjectMemberResultMap">
  		<id property="empNo" column="EMP_NO"/>
  		<id property="projectNo" column="PROJECT_NO"/>
  		<result property="empName" column="EMP_NAME"/>
  		<result property="empJob" column="EMP_JOB" />
  		<result property="deptName" column="DEPT_NAME"/>
  		<result property="empFileReName" column="EMP_FILERENAME"/>
  		<result property="empAuth" column="EMP_PROJECT_AUTH"/>
  		<result property="taskDetailSuccess" column="TASK_DETAIL_SUCCESS"/>
  	</resultMap>
  	
  	<resultMap type="ProjectCalendar" id="ProjectCalendarResultMap">
  		<id property="projectCalendarNo" column="CALENDAR_NO"/>
  		<id property="projectNo" column="PROJECT_NO"/>
  		<result property="projectCalendarEventTitle" column="CALENDAR_TITLE"/>
  		<result property="projectCalendarStartTime" column="CALENDAR_START_TIME"/>
  		<result property="projectCalendarEndTime" column="CALENDAR_END_TIME"/>
  	</resultMap>
  	
  	<resultMap type="ProjectTask" id="ProjectTaskResultMap">
  		<id property="taskNo" column="TASK_NO"/>
  		<result property="projectNo" column="PROJECT_NO"/>
  		<result property="taskTitle" column="TASK_TITLE"/>
  		<result property="taskEndDate" column="TASK_END_DATE"/>
  		<result property="taskProcessivity" column="TASK_PROCESSIVITY"/>
  	</resultMap>
  	
  	<resultMap type="ProjectTaskDetail" id="ProjectTaskDetailResultMap">
  		<id property="taskDetailNo" column="TASK_DETAIL_NO"/>
  		<result property="empNo" column="EMP_NO"/>
  		<result property="taskNo" column="TASK_NO"/>
  		<result property="taskDetailId" column="TASK_DETAIL_ID"/>
  		<result property="taskDetailSucccess" column="TASK_DETAIL_SUCCESS"/>
  		<result property="taskDetailTitle" column="TASK_DETAIL_TITLE"/>
  	</resultMap>
  	
  	
  	 	<resultMap type="Employee2" id="employeeResultMap">
 		<id property="empNo" column="EMP_NO"/>
 		<result property="deptNo" column="DEPT_CODE"></result>
 		<result property="teamNo" column="TEAM_CODE"></result>
 		<result property="empId" column="EMP_ID"></result>
 		<result property="empPwd" column="EMP_PWD"></result>
 		<result property="empName" column="EMP_NAME"></result>
 		<result property="empBirth" column="EMP_BIRTH"></result>
 		<result property="empPhone" column="EMP_PHONE"></result>
 		<result property="empJob" column="EMP_JOB"></result>
 		<result property="empEmail" column="EMP_EMAIL"></result>
 		<result property="empSubEmail" column="EMP_SUBEMAIL"></result>
 		<result property="empExnum" column="EMP_EXNUM"></result>
 		<result property="empState" column="EMP_STATE"></result>
 		<result property="empVac" column="EMP_VAC"></result>
 		<result property="empMed" column="EMP_MED"></result>
 		<result property="empExVac" column="EMP_EXVAC"></result>
 		<result property="empSign" column="EMP_SIGN"></result>
 		<result property="deptName" column="DEPT_NAME"></result>
 		<result property="empFileName" column="EMP_FILENAME"></result>
 		<result property="empFileReName" column="EMP_FILERENAME"></result>
 	</resultMap>
 	
 	<resultMap type="Team" id="teamResultMap">
 		<id property="teamNo" column="TEAM_NO"/>
 		<result property="deptNo" column="DEPT_CODE"/>
 		<result property="teamName" column="TEAM_NAME"/>
 	</resultMap>
 	
 	
 	<resultMap type="Dept" id="deptResultMap">
 		<id property="deptNo" column="DEPT_CODE"/>
 		<result property="deptName" column="DEPT_NAME"/>
 	</resultMap>
	
	
<!-- 	프로젝트 인서트시 팀원검색 -->
	<select id="insertProjectSearchList" resultMap="employeeResultMap" parameterType="hashMap">
		SELECT EMP.EMP_NAME, EMP.EMP_JOB, EMP.EMP_NO, EMP.DEPT_CODE,EMP.EMP_FILERENAME, DEPT.DEPT_NAME  FROM EMPLOYEE EMP JOIN DEPT DEPT ON (EMP.DEPT_CODE=DEPT.DEPT_CODE) WHERE EMP.EMP_NAME LIKE '%' || #{searchText} || '%' AND NOT EMP.EMP_NO = #{empNo}
	</select>
	
<!-- 	프로젝트 팀원 초대시 검색 -->
	<select id="selectInviteList" resultMap="employeeResultMap" parameterType="hashMap">
		SELECT
	DISTINCT EMP.EMP_NAME, EMP.EMP_JOB,EMP.EMP_NO, EMP.DEPT_CODE,EMP.EMP_FILERENAME, DEPT.DEPT_NAME
	FROM
	EMPLOYEE EMP
	LEFT JOIN
DEPT DEPT ON (EMP.DEPT_CODE=DEPT.DEPT_CODE)
LEFT JOIN EMP_PROJECT A ON (EMP.EMP_NO = A.EMP_NO)
WHERE EMP.EMP_NAME LIKE '%'|| #{searchText} ||'%'
AND NOT EMP.EMP_NO = #{empNo}
AND EMP.EMP_NO NOT IN ( SELECT EMP_NO FROM EMP_PROJECT WHERE PROJECT_NO = #{projectNo})
	</select>
	
<!-- 	프로젝트 정보 등록한 뒤 팀원 넣을때 필요한 no 가져오는 구문 -->
	<select id="selectProjectOne" resultMap="ProjectResultMap" parameterType="Project">
		SELECT * FROM PROJECT WHERE PROJECT_TITLE = #{projectTitle} AND PROJECT_CONTENTS = #{projectContents} AND PROJECT_MASTER = #{projectMaster}
	</select>
	
<!-- 	프로젝트 목록 (책임자) -->
	<select id="selectProjectList" resultMap="ProjectResultMap" parameterType="hashMap">
		SELECT * FROM PROJECT WHERE PROJECT_MASTER = #{empNo} AND PROJECT_INSERT_REQUEST = #{info}
	</select>
	
<!-- 	프로젝트 목록 -->
	<select id="selectMemberProjectList" resultMap="EmpProjectResultMap" parameterType="hashMap">
		SELECT EPRO.PROJECT_NO, EPRO.EMP_NO, EPRO.EMP_PROJECT_AUTH, PRO.PROJECT_TITLE FROM EMP_PROJECT EPRO JOIN PROJECT PRO ON (EPRO.PROJECT_NO = PRO.PROJECT_NO) WHERE EPRO.EMP_NO = #{empNo} AND PRO.PROJECT_INSERT_REQUEST = #{info}
	</select>
	
<!-- 	프로젝트 디테일 -->
	<select id="selectProject" resultMap="ProjectResultMap" parameterType="_int">
		SELECT * FROM PROJECT WHERE PROJECT_NO = #{projectNo}
	</select>
	
<!-- 	프로젝트책임자 찾기 -->
	<select id="selectMaster" resultMap="employeeResultMap" parameterType="_int">
		SELECT EMP.EMP_NAME, EMP.EMP_JOB, EMP.EMP_NO, EMP.DEPT_CODE,EMP.EMP_FILERENAME, DEPT.DEPT_NAME  FROM EMPLOYEE EMP JOIN DEPT DEPT ON (EMP.DEPT_CODE=DEPT.DEPT_CODE) WHERE EMP.EMP_NO = #{masterEmpNo}
	</select>
	
	
<!-- 	프로젝트 팀원리스트(메인페이지) -->
	<select id="selectMemberList" resultMap="ProjectMemberResultMap" parameterType="_int">
		SELECT EPRO.EMP_NO, EPRO.EMP_PROJECT_AUTH,EMP.EMP_FILERENAME, EMP.EMP_JOB, EMP.EMP_NAME, DEPT.DEPT_NAME FROM EMP_PROJECT EPRO JOIN EMPLOYEE EMP ON (EPRO.EMP_NO = EMP.EMP_NO) JOIN DEPT DEPT ON (DEPT.DEPT_CODE = EMP.DEPT_CODE) WHERE PROJECT_NO = #{projectNo}
	</select>
	
<!-- 	프로젝트 팀원리스트(팀원목록 페이지) -->
	<select id="selectMemberAllList" resultMap="ProjectMemberResultMap">
		SELECT EPRO.EMP_NO, EPRO.EMP_PROJECT_AUTH, EMP.EMP_JOB, EMP.EMP_NAME,EMP.EMP_FILERENAME, DEPT.DEPT_NAME FROM EMP_PROJECT EPRO JOIN EMPLOYEE EMP ON (EPRO.EMP_NO = EMP.EMP_NO) JOIN DEPT DEPT ON (DEPT.DEPT_CODE = EMP.DEPT_CODE) WHERE PROJECT_NO = #{projectNo}
	</select>
	
<!-- 	팀원목록에서 검색시 -->
	<select id="selectSearchMemberList" resultMap="ProjectMemberResultMap">
		SELECT EPRO.EMP_NO, EPRO.EMP_PROJECT_AUTH, EMP.EMP_JOB,EMP.EMP_FILERENAME, EMP.EMP_NAME, DEPT.DEPT_NAME FROM EMP_PROJECT EPRO JOIN EMPLOYEE EMP ON (EPRO.EMP_NO = EMP.EMP_NO) JOIN DEPT DEPT ON (DEPT.DEPT_CODE = EMP.DEPT_CODE) WHERE PROJECT_NO = #{projectNo} AND EMP.EMP_NAME LIKE  '%' || #{searchText} || '%'
	</select>
	
<!-- 	프로젝트 일정목록 가져오기 -->
	<select id="selectProjectCalendar" resultMap="ProjectCalendarResultMap" parameterType="_int">
		SELECT * FROM PROJECT_CALENDAR WHERE PROJECT_NO = #{projectNo}
	</select>
	
<!-- 	프로젝트 일정 수정시 페이지 조회 -->
	<select id="selectProjectEventDetail" resultMap="ProjectCalendarResultMap" parameterType="hashMap">
		SELECT * FROM PROJECT_CALENDAR WHERE CALENDAR_NO = #{calNo} AND PROJECT_NO =#{projectNo}
	</select>
	
<!-- 	프로젝트 대표업무 가져오기 -->
	<select id="selectProjectTask" resultMap="ProjectTaskResultMap" parameterType="_int">
		SELECT * FROM PROJECT_TASK WHERE PROJECT_NO = #{projectNo}
	</select>
	
<!-- 	프로젝트 대표업무 세부사항에 할당할 팀원 검색 -->
	<select id="selectTaskMemberSearchList" resultMap="ProjectMemberResultMap" parameterType="ProjectMember">
		SELECT EPRO.EMP_NO, EPRO.EMP_PROJECT_AUTH, EMP.EMP_JOB,EMP.EMP_FILERENAME, EMP.EMP_NAME, DEPT.DEPT_NAME FROM EMP_PROJECT EPRO JOIN EMPLOYEE EMP ON (EPRO.EMP_NO = EMP.EMP_NO) JOIN DEPT DEPT ON (DEPT.DEPT_CODE = EMP.DEPT_CODE) WHERE PROJECT_NO = #{projectNo} AND NOT EMP.EMP_NO = #{empNo} AND EMP.EMP_NAME LIKE '%' || #{searchText} || '%'
	</select>
	
<!-- 	프로젝트 멤버 총 안원수 -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*) FROM EMP_PROJECT EPRO JOIN EMPLOYEE EMP ON (EPRO.EMP_NO = EMP.EMP_NO) JOIN DEPT DEPT ON (DEPT.DEPT_CODE = EMP.DEPT_CODE) WHERE PROJECT_NO =#{projectNo}
	</select>
	
<!-- 	검색된 프로젝트 멤버 총 인원수 -->
	<select id="searchListCount" resultType="_int">
	SELECT COUNT(*) FROM EMP_PROJECT EPRO JOIN EMPLOYEE EMP ON (EPRO.EMP_NO = EMP.EMP_NO) JOIN DEPT DEPT ON (DEPT.DEPT_CODE = EMP.DEPT_CODE) WHERE PROJECT_NO =#{projectNo} AND EMP.EMP_NAME LIKE '%' || #{searchText} || '%'
	</select>
	
	<!-- 프로젝트 대표업무 등록 이동할때 대표업무 유무체크 -->
	<select id="selectTask" parameterType="_int" resultMap="ProjectTaskResultMap">
	SELECT * FROM PROJECT_TASK WHERE PROJECT_NO = #{projectNo}
 	</select>
 	
<!--  	대표업무 세부사항 찾기(목록) -->
	<select id="selectTaskDetail" parameterType="hashMap" resultMap="ProjectTaskDetailResultMap">
		SELECT DISTINCT TASK_DETAIL_NO,TASK_NO,TASK_DETAIL_ID,TASK_DETAIL_TITLE FROM PROJECT_TASK_DETAIL WHERE TASK_NO = #{taskNo}
	</select>
	
<!-- 	대표업무 세부사항 찾기(하나만) -->
	<select id="selectProjectTaskDetail" parameterType="hashMap" resultMap="ProjectTaskDetailResultMap">
	SELECT DISTINCT TASK_DETAIL_NO,TASK_NO,TASK_DETAIL_ID,TASK_DETAIL_TITLE FROM PROJECT_TASK_DETAIL WHERE TASK_NO = #{taskNo} AND TASK_DETAIL_NO = #{taskDetailNo}
	</select>
	
<!-- 	대표업무 세부사항 팀원리스트 -->
	<select id="selectTaskDetailMemberList" parameterType="hashMap" resultMap="ProjectMemberResultMap">
		SELECT TASK.EMP_NO,EMP.EMP_JOB,EMP.EMP_NAME,DEPT.DEPT_NAME,EMP.EMP_FILERENAME, TASK_DETAIL_SUCCESS
 		FROM PROJECT_TASK_DETAIL TASK 
		JOIN EMPLOYEE EMP ON (EMP.EMP_NO = TASK.EMP_NO)
		JOIN DEPT DEPT ON (EMP.DEPT_CODE = DEPT.DEPT_CODE)
		WHERE TASK_DETAIL_NO = #{taskDetailNo} AND TASK_NO = #{taskNo}
	</select>
	
<!-- 	세부사항 토탈 카운트(진행도 계산떄문) -->
	<select id="selectTaskDetailTotalCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_TASK_DETAIL WHERE TASK_DETAIL_NO =#{taskDetailCountNo}
	</select>
	
<!-- 	대표업무 세부사항 총 카운트 -->
	<select id="selectMainWorkTotalCount" parameterType="hashMap" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_TASK_DETAIL WHERE TASK_NO = #{taskNo}
	</select>
	
<!-- 	대표업무 세부사항 완료한 인원 카운트 -->
	<select id="selectMainWorkCompleteCount" parameterType="hashMap" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_TASK_DETAIL WHERE TASK_NO = #{taskNo} AND TASK_DETAIL_SUCCESS = #{complete}
	</select>
	
<!-- 	세부사항 완료한 인원 카운트 -->
	<select id="selectTaskDetailCompleteCount" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_TASK_DETAIL WHERE TASK_DETAIL_NO = #{taskDetailCountNo} AND TASK_DETAIL_SUCCESS = #{complete}
	</select>
	
<!--     멤버등록 -->
	<update id="insertProjectMemberList" parameterType="hashMap">
		<foreach collection="empNoList" item="empNoList" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
		INTO EMP_PROJECT(EMP_NO, PROJECT_NO, EMP_PROJECT_AUTH) VALUES(#{empNoList}, #{projectNo}, DEFAULT)
		</foreach>
	</update>
	
<!-- 	세부사항 등록 -->
	<update id="insertTaskDetail" parameterType="hashMap">
		<foreach collection="empNoList" item="empNoList" index="index" separator="" open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO PROJECT_TASK_DETAIL(TASK_DETAIL_NO,EMP_NO,TASK_NO,TASK_DETAIL_ID,TASK_DETAIL_SUCCESS,TASK_DETAIL_TITLE) 
			VALUES(SEQ_TASK_DETAIL_NO.NEXTVAL,#{empNoList},#{taskNo},#{taskId},DEFAULT,#{taskName})
		</foreach>
	</update>
	
<!-- 	프로젝트 팀원 권한 수정 -->
	<update id="updateProjectMember" parameterType="hashMap">
		UPDATE EMP_PROJECT SET EMP_PROJECT_AUTH = #{memberAuth} WHERE EMP_NO = #{empNo} AND PROJECT_NO = #{projectNo}	
	</update>
	
<!-- 	대표업무 진행도 변경 -->
	<update id="updateMainWorkProcessivity" parameterType="hashMap">
		UPDATE PROJECT_TASK SET TASK_PROCESSIVITY = #{mainWorkProcessivity} WHERE TASK_NO = #{taskNo} AND PROJECT_NO = #{projectNo}
	</update>

<!-- 	프로젝트 일정 수정 -->
	<update id="updateProjectEvent" parameterType="ProjectCalendar">
  		UPDATE PROJECT_CALENDAR SET CALENDAR_TITLE = #{projectCalendarEventTitle}, CALENDAR_START_TIME= #{projectCalendarStartTime}, CALENDAR_END_TIME = #{projectCalendarEndTime} WHERE PROJECT_NO = #{projectNo} AND CALENDAR_NO =#{projectCalendarNo}
  	</update>
  	
<!--   	프로젝트 삭제 요청 -->
	<update id="deleteProjectRequest" parameterType="_int">
		UPDATE PROJECT SET PROJECT_DELETE_REQUEST = 'Y' WHERE PROJECT_NO = #{projectNo} 
	</update>
	
<!-- 	세부사항 상태변경 -->
	<update id="successDetailTask" parameterType="hashMap">
		UPDATE PROJECT_TASK_DETAIL SET TASK_DETAIL_SUCCESS =#{complete} WHERE TASK_NO = #{taskNo} AND EMP_NO = #{empNo} AND TASK_DETAIL_NO = #{taskDetailNo}
	</update>
	
<!-- 	프로젝트 대표업무 수정 -->
	<update id="updateMainWork" parameterType="hashMap">
		UPDATE PROJECT_TASK SET TASK_TITLE = #{taskTitle} WHERE TASK_NO = #{taskNo} AND PROJECT_NO = #{projectNo}
	</update>
	
<!-- 	팀원추방 -->
	<delete id="deleteMemberList" parameterType="hashMap">
		DELETE FROM EMP_PROJECT WHERE EMP_NO = #{empNo} AND PROJECT_NO = #{projectNo}
	</delete>
	
<!-- 	프로젝트 일정 삭제 -->
	<delete id="deleteProjectEvent" parameterType="ProjectCalendar">
  		DELETE FROM PROJECT_CALENDAR WHERE CALENDAR_NO = #{projectCalendarNo} AND PROJECT_NO = #{projectNo}
  	</delete>
  	
	<!-- 프로젝트 대표업무 삭제 -->
	<delete id="deleteMainWork" parameterType="hashMap">
	DELETE FROM PROJECT_TASK WHERE PROJECT_NO = #{projectNo} AND TASK_NO = #{taskNo}
 	</delete>
 	
<!--  	프로젝트 대표업무 세부사항삭제 -->
	<delete id="deleteTaskDetail" parameterType="hashMap">
		DELETE FROM PROJECT_TASK_DETAIL WHERE TASK_NO = #{taskNo} AND TASK_DETAIL_NO = #{taskDetailNo}
	</delete>
	
<!-- 	프로젝트등록 -->
	<insert id="insertProjectRegister" parameterType="Project">
		INSERT INTO PROJECT VALUES(SEQ_PRO_NO.NEXTVAL, #{projectTitle}, #{projectContents}, #{projectMaster}, DEFAULT, DEFAULT)
	</insert>
	
	<!-- 프로젝트 대표업무 등록 -->
	<insert id="insertMainWork" parameterType="hashMap">
	INSERT INTO PROJECT_TASK VALUES(SEQ_TASK_NO.NEXTVAL, #{projectNo}, #{mainWorkName}, DEFAULT)
	 </insert>
	
<!-- 	프로젝트 일정등록 -->
	<insert id="insertProjectEvent" parameterType="ProjectCalendar">
  		INSERT INTO PROJECT_CALENDAR VALUES(SEQ_PROJECT_CALENDAR_NO.NEXTVAL, #{projectNo}, #{projectCalendarEventTitle}, #{projectCalendarStartTime}, #{projectCalendarEndTime})
  	</insert>
  </mapper>