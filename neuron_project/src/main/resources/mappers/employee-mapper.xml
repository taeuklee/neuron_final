<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="employeeMapper">
 	<resultMap type="Employee" id="employeeResultMap">
 		<id property="empNo" column="EMP_NO"/>
 		<result property="deptCode" column="DEPT_CODE"></result>
 		<result property="teamCode" column="TEAM_CODE"></result>
 		<result property="empId" column="EMP_ID"></result>
 		<result property="empPwd" column="EMP_PWD"></result>
 		<result property="empName" column="EMP_NAME"></result>
 		<result property="empBirth" column="EMP_BIRTH"></result>
 		<result property="empPhone" column="EMP_PHONE"></result>
 		<result property="empJob" column="EMP_JOB"></result>
 		<result property="empEmail" column="EMP_EMAIL"></result>
 		<result property="empSubEmail" column="EMP_SUBEMAIL"></result>
 		<result property="empExnum" column="EMP_EXNUM"></result>
 		<result property="empState" column="EMP_STATE"></result>
 		<result property="empVac" column="EMP_VAC"></result>
 		<result property="empMed" column="EMP_MED"></result>
 		<result property="empExVac" column="EMP_EXVAC"></result>
 		<result property="empSign" column="EMP_SIGN"></result>
  		<result property="empFileName" column="EMP_FILENAME"></result>
  		<result property="empFileReName" column="EMP_FILERENAME"></result>
		<result property="empMaster" column="EMP_MASTER"></result>
 	</resultMap>
 	
 	<resultMap type="Team" id="teamResultMap">
 		<id property="teamCode" column="TEAM_CODE"/>
 		<result property="deptCode" column="DEPT_CODE"/>
 		<result property="teamName" column="TEAM_NAME"/>
 	</resultMap>
 	
 	
 	<resultMap type="Dept" id="deptResultMap">
 		<id property="deptCode" column="DEPT_CODE"/>
 		<result property="deptName" column="DEPT_NAME"/>
 	</resultMap>  
 	
 	 <resultMap type="DeptTeam" id="dtResultMap">
 		<id property="deptCode" column="DEPT_CODE"/>
 		<result property="deptName" column="DEPT_NAME"/>
 		<result property="teamCode" column="TEAM_CODE"/>
 		<result property="teamName" column="TEAM_NAME"/>
 	</resultMap>
 	
 	<!-- 로그인 -->
 	<select id="selectEmp" resultMap="employeeResultMap">
 		SELECT * FROM EMPLOYEE WHERE EMP_ID = #{empId } and EMP_PWD = #{empPwd}
 	 </select>
 	 
 	 <!-- 사원 리스트 출력 + 페이징처리-->
 	 <select id="selectListCount" resultType="_int">
  	SELECT COUNT(*) FROM EMPLOYEE
  		</select>
 	   <select id="selectAllList" resultMap="employeeResultMap">
  		SELECT * FROM EMPLOYEE ORDER BY EMP_NO ASC
  		</select>
  		
	<!--  사원 등록 페이지에서 부서, 팀 출력 -->
	<select id="selectAllDtList" resultMap="dtResultMap">
	SELECT D.DEPT_CODE, D.DEPT_NAME, T.TEAM_CODE, T.TEAM_NAME
	FROM DEPT D, TEAM T
	WHERE D.DEPT_CODE = T.DEPT_CODE
	</select>
   	
   	<!-- 사원 검색 -->
   	 <select id="selectSearchAll" resultMap="employeeResultMap">
      SELECT * FROM EMPLOYEE
      <if test="searchCondition.toString() == 'name'">
         WHERE EMP_NAME LIKE '%' || #{searchValue } || '%'
      </if>
      <if test="searchCondition.toString() == 'deptcode'">
         WHERE DEPT_CODE LIKE '%' || #{searchValue } || '%'
      </if>
      <if test="searchCondition.toString() == 'job'">
         WHERE EMP_JOB LIKE '%' || #{searchValue } || '%'
      </if>
      <if test="searchCondition.toString() == 'state'">
         WHERE EMP_STATE LIKE '%' || #{searchValue } || '%'
      </if>
      
      ORDER BY EMP_NO ASC
   </select>
   	
   	<!-- 사원 디테일 보기 -->
   	<select id="selectOneEmp" parameterType="_int"  resultMap="employeeResultMap">   	
  	 SELECT * FROM EMPLOYEE WHERE EMP_NO = #{eNo}
  	</select>
 	 
 	 <select id="selectAllTeam" resultMap="teamResultMap">
 	 	SELECT * FROM TEAM
 	 </select>
 	 
	 <select id="selectAllDept" resultMap="deptResultMap">
 	 	SELECT * FROM DEPT
  	 </select>  
 	 
 	 <!-- 사원 등록 -->
 	 <insert id="insertEmp" parameterType="Employee">
 		INSERT INTO EMPLOYEE VALUES (SEQ_EMPNUM.NEXTVAL, #{deptCode}, #{teamCode}, #{empId}, #{empPwd}, 
 		#{empName}, #{empBirth}, #{empPhone}, #{empJob}, #{empEmail}, #{empSubEmail}, 
        #{empExnum}, #{empState},NULL, NULL, NULL, NULL, #{empFileName}, #{empFileReName}, #{empMaster}) 
 	 </insert>
 	 
 	 <!-- 개인 정보 수정 -->
 	  <update id="updateEmpInfo" parameterType="Employee">
  		UPDATE EMPLOYEE SET EMP_PWD = #{empPwd}, EMP_PHONE = #{empPhone}, EMP_SUBEMAIL = #{empSubEmail} WHERE EMP_ID = #{empId }
  	</update>
  	
  	<!-- 관리자 -> 사원 정보 수정 -->
  	 <update id="updateEmpAdmin" parameterType="Employee">
  		UPDATE EMPLOYEE SET DEPT_CODE = #{deptCode}, TEAM_CODE = #{teamCode}, 
  		EMP_JOB = #{empJob}, EMP_EXNUM = #{empExnum}, EMP_STATE = #{empState}, EMP_MASTER = #{empMaster } WHERE EMP_ID = #{empId }
  	</update>


	<select id="selectEmpJoinTeam" parameterType="_int" resultType="map">
		select a.* ,b.team_name
		from employee a left join team b on(a.team_code = b.team_code)
		where emp_no = #{empNo }
	</select>
	
<!-- 	메일에서 사원번호  메일주소로 변환 -->
	<select id="selectOneEmail" parameterType="_int" resultType="string">
		SELECT EMP_EMAIL FROM EMPLOYEE WHERE EMP_NO = #{empNo}
	</select>
	
	<update id="updateEmpVacation" parameterType="com.neuron.spring.util.DataMap">
		update employee
		<set>
			<if test='vacKind == "연차"'>
			emp_vac = #{day }
			</if>
			<if test='vacKind == "병가"'>
			emp_med = #{day }
			</if>
			<if test='vacKind == "기타"'>
			emp_exvac = #{day }
			</if>
		</set>
		where emp_no = #{wtEmpNo }
	</update>
	
	<select id="selectEmpAll" resultMap="employeeResultMap">
		SELECT * FROM EMPLOYEE WHERE EMP_NO = #{empNo }
	</select>
	
	<!-- 주소록 검색 -->
   	 <select id="selectSearchEmpAll" resultMap="employeeResultMap">
      SELECT * FROM EMPLOYEE
      <if test="searchCondition.toString() == 'name'">
         WHERE EMP_NAME LIKE '%' || #{searchValue } || '%'
      </if>
      <if test="searchCondition.toString() == 'empEmail">
      	 WHERE EMP_EMAIL LIKE '%' || #{searchValue } || '%' 
      </if>
      <if test="searchCondition.toString() == 'empPhone">
      	 WHERE EMP_PHONE LIKE '%' || #{searchValue } || '%' 
      </if>
      <if test="searchCondition.toString() == 'all'">
         WHERE EMP_NAME LIKE '%' || #{searchValue } || '%'
         OR EMP_EMAIL LIKE '%' || #{searchValue } || '%' 
         OR EMP_PHONE LIKE '%' || #{searchValue } || '%' 
      </if>
      ORDER BY EMP_NO ASC
   </select>
   
	<select id="selectAllEmpList" resultMap="employeeResultMap">
		SELECT * FROM EMPLOYEE WHERE EMP_STATE = '재직'
	</select>
 </mapper>